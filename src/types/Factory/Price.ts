// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Price__chainLinkOraclesResult {
  value0: Address;
  value1: i32;

  constructor(value0: Address, value1: i32) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    return map;
  }
}

export class Price__v2OraclesResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: i32;
  value4: Address;
  value5: boolean;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: i32,
    value4: Address,
    value5: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromI32(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    return map;
  }
}

export class Price__v3OraclesResult {
  value0: i32;
  value1: Address;
  value2: boolean;

  constructor(value0: i32, value1: Address, value2: boolean) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromI32(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    return map;
  }
}

export class Price extends ethereum.SmartContract {
  static bind(address: Address): Price {
    return new Price("Price", address);
  }

  chainLinkOracles(param0: Address): Price__chainLinkOraclesResult {
    let result = super.call(
      "chainLinkOracles",
      "chainLinkOracles(address):(address,uint8)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new Price__chainLinkOraclesResult(
      result[0].toAddress(),
      result[1].toI32()
    );
  }

  try_chainLinkOracles(
    param0: Address
  ): ethereum.CallResult<Price__chainLinkOraclesResult> {
    let result = super.tryCall(
      "chainLinkOracles",
      "chainLinkOracles(address):(address,uint8)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Price__chainLinkOraclesResult(value[0].toAddress(), value[1].toI32())
    );
  }

  oracleTypes(param0: Address): i32 {
    let result = super.call("oracleTypes", "oracleTypes(address):(uint8)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toI32();
  }

  try_oracleTypes(param0: Address): ethereum.CallResult<i32> {
    let result = super.tryCall("oracleTypes", "oracleTypes(address):(uint8)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  v2Oracles(param0: Address): Price__v2OraclesResult {
    let result = super.call(
      "v2Oracles",
      "v2Oracles(address):(uint32,uint256,uint256,int8,address,bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new Price__v2OraclesResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toI32(),
      result[4].toAddress(),
      result[5].toBoolean()
    );
  }

  try_v2Oracles(param0: Address): ethereum.CallResult<Price__v2OraclesResult> {
    let result = super.tryCall(
      "v2Oracles",
      "v2Oracles(address):(uint32,uint256,uint256,int8,address,bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Price__v2OraclesResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toI32(),
        value[4].toAddress(),
        value[5].toBoolean()
      )
    );
  }

  v3Oracles(param0: Address): Price__v3OraclesResult {
    let result = super.call(
      "v3Oracles",
      "v3Oracles(address):(int8,address,bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new Price__v3OraclesResult(
      result[0].toI32(),
      result[1].toAddress(),
      result[2].toBoolean()
    );
  }

  try_v3Oracles(param0: Address): ethereum.CallResult<Price__v3OraclesResult> {
    let result = super.tryCall(
      "v3Oracles",
      "v3Oracles(address):(int8,address,bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Price__v3OraclesResult(
        value[0].toI32(),
        value[1].toAddress(),
        value[2].toBoolean()
      )
    );
  }

  getPrice(): BigInt {
    let result = super.call("getPrice", "getPrice():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getPrice(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getPrice", "getPrice():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class SetPoolCall extends ethereum.Call {
  get inputs(): SetPoolCall__Inputs {
    return new SetPoolCall__Inputs(this);
  }

  get outputs(): SetPoolCall__Outputs {
    return new SetPoolCall__Outputs(this);
  }
}

export class SetPoolCall__Inputs {
  _call: SetPoolCall;

  constructor(call: SetPoolCall) {
    this._call = call;
  }

  get oracle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get typ(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get reverse(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class SetPoolCall__Outputs {
  _call: SetPoolCall;

  constructor(call: SetPoolCall) {
    this._call = call;
  }
}
